load("@bazel_skylib//rules:expand_template.bzl", "expand_template")
load("//python:defs.bzl", "py_test")
load("//python/module_extension:defs.bzl", "py_cc_extension")

MODES = [
    "dbg",
    "opt",
    "fastbuild",
    "current",
]

[
    expand_template(
        name = "string_sum_{}_src".format(mode),
        out = "string_sum_{}.cc".format(mode),
        substitutions = {
            "PyInit_string_sum_current": "PyInit_string_sum_{}".format(mode),
        },
        template = "string_sum_current.cc",
    )
    for mode in MODES
    # `current` is the actual source file.
    if mode != "current"
]

[
    py_cc_extension(
        name = "string_sum_{}".format(mode),
        srcs = ["string_sum_{}.cc".format(mode)],
        compilation_mode = mode,
        # TODO: Windows does not build in debug mode for some reason
        target_compatible_with = [] if mode != "dbg" else select({
            "@platforms//os:windows": ["@platforms//:incompatible"],
            "//conditions:default": [],
        }),
    )
    for mode in MODES
]

[
    expand_template(
        name = "string_sum_{}_test_src".format(mode),
        out = "string_sum_{}_test.py".format(mode),
        substitutions = {
            "compilation_modes.string_sum_current": "compilation_modes.string_sum_{}".format(mode),
        },
        template = "string_sum_current_test.py",
    )
    for mode in MODES
    # `current` is the actual source file.
    if mode != "current"
]

[
    py_test(
        name = "string_sum_{}_test".format(mode),
        srcs = ["string_sum_{}_test.py".format(mode)],
        deps = [":string_sum_{}".format(mode)],
    )
    for mode in MODES
]
