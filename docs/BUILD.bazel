load("@io_bazel_stardoc//stardoc:stardoc.bzl", "stardoc")
load("@rules_rust_mdbook//:defs.bzl", "mdbook", "mdbook_server")
load("@rules_shell//shell:sh_binary.bzl", "sh_binary")

stardoc(
    name = "venv",
    out = "src/venv.md",
    input = "//python/venv:defs.bzl",
    table_of_contents_template = "@io_bazel_stardoc//stardoc:templates/markdown_tables/table_of_contents.vm",
    tags = ["manual"],
    deps = ["@rules_venv//python/venv:bzl_lib"],
)

stardoc(
    name = "black",
    out = "src/black.md",
    input = "//python/black:defs.bzl",
    table_of_contents_template = "@io_bazel_stardoc//stardoc:templates/markdown_tables/table_of_contents.vm",
    tags = ["manual"],
    deps = ["//python/black:bzl_lib"],
)

stardoc(
    name = "isort",
    out = "src/isort.md",
    input = "//python/isort:defs.bzl",
    table_of_contents_template = "@io_bazel_stardoc//stardoc:templates/markdown_tables/table_of_contents.vm",
    tags = ["manual"],
    deps = ["//python/isort:bzl_lib"],
)

stardoc(
    name = "global_venv",
    out = "src/global_venv.md",
    input = "//python/global_venv:defs.bzl",
    table_of_contents_template = "@io_bazel_stardoc//stardoc:templates/markdown_tables/table_of_contents.vm",
    tags = ["manual"],
    deps = ["//python/global_venv:bzl_lib"],
)

stardoc(
    name = "wheel",
    out = "src/wheel.md",
    input = "//python/wheel:defs.bzl",
    table_of_contents_template = "@io_bazel_stardoc//stardoc:templates/markdown_tables/table_of_contents.vm",
    tags = ["manual"],
    deps = ["//python/wheel:bzl_lib"],
)

mdbook(
    name = "book",
    srcs = glob(["src/**/*.md"]) + [
        ":black",
        ":global_venv",
        ":isort",
        ":venv",
        ":wheel",
    ],
    book = "book.toml",
    # Windows builds are typically super slow in CI so they're avoided.
    target_compatible_with = select({
        "@platforms//os:windows": ["@platforms//:incompatible"],
        "//conditions:default": [],
    }),
)

alias(
    name = "docs",
    actual = ":book",
)

mdbook_server(
    name = "server",
    book = ":book",
)

sh_binary(
    name = "publish_book",
    srcs = ["publish_book.sh"],
    data = [":book"],
    env = {"BOOK_DIR": "$(rootpath :book)"},
)
